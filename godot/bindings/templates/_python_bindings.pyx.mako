# Generated by PyGodot binding generator

from ..core.globals cimport gdapi
from ..core._wrapped cimport _PyWrapped
from ..core.tag_db cimport register_global_python_type


% for class_name, class_def, includes, forwards, methods in classes:
% if methods:

cdef __${class_name}__method_bindings __${class_name}__mb

% endif
cdef class ${class_name}(${class_def['base_class'] or '_PyWrapped'}):
    @staticmethod
    def __init_method_bindings():
    % for method_name, method, return_type, pxd_signature, signature, args, return_stmt, init_args in methods:
        __${class_name}__mb.mb_${method_name} = gdapi.godot_method_bind_get_method("${class_def['name']}", "${method['name']}")
    % endfor
    % if not methods:
        pass
    % endif

% endfor


cdef __init_method_bindings():
% for class_name, class_def, includes, forwards, methods in classes:
    ${class_name}.__init_method_bindings()
% endfor


cdef __register_types():
% for class_name, class_def, includes, forwards, methods in classes:
    register_global_python_type(${class_name}, ${repr(class_def['name'])})
% endfor
